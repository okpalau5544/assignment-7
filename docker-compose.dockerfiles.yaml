services:
  nginx:
    image: nginx
    volumes:
      - ./nginx.dockerfiles.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 8080:80
    depends_on:
      - mcmasterful-books
      - api-server
      - api-server2
      - api-server3
      - docs

  # McMasterful Books Frontend (Adapter)
  mcmasterful-books:
    build:
      context: .
      dockerfile: mcmasterful-books/Dockerfile
    expose:
      - "9080"
    volumes:
      - ./adapter:/app/adapter
    environment:
      - NODE_ENV=production
      - PORT=9080

  # Main API Servers (Load Balanced)
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "3000"
    depends_on:
      - mongo
      - mongo-warehouse
      - mongo-orders
      - rabbitmq
      - books-service
      - order-service
      - warehouse-service
    environment:
      - NODE_ENV=production
      - PORT=3000
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - MONGO_BOOKS_URL=mongodb://mongo:27017/mcmasterful-books
      - MONGO_WAREHOUSE_URL=mongodb://mongo-warehouse:27017/mcmasterful-warehouse
      - MONGO_ORDERS_URL=mongodb://mongo-orders:27017/mcmasterful-orders
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  api-server2:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "3000"
    depends_on:
      - mongo
      - mongo-warehouse
      - mongo-orders
      - rabbitmq
      - books-service
      - order-service
      - warehouse-service
    environment:
      - NODE_ENV=production
      - PORT=3000
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - MONGO_BOOKS_URL=mongodb://mongo:27017/mcmasterful-books
      - MONGO_WAREHOUSE_URL=mongodb://mongo-warehouse:27017/mcmasterful-warehouse
      - MONGO_ORDERS_URL=mongodb://mongo-orders:27017/mcmasterful-orders
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  api-server3:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "3000"
    depends_on:
      - mongo
      - mongo-warehouse
      - mongo-orders
      - rabbitmq
      - books-service
      - order-service
      - warehouse-service
    environment:
      - NODE_ENV=production
      - PORT=3000
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - MONGO_BOOKS_URL=mongodb://mongo:27017/mcmasterful-books
      - MONGO_WAREHOUSE_URL=mongodb://mongo-warehouse:27017/mcmasterful-warehouse
      - MONGO_ORDERS_URL=mongodb://mongo-orders:27017/mcmasterful-orders
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Microservices
  books-service:
    build:
      context: .
      dockerfile: services/books-service/Dockerfile
    expose:
      - "3001"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - NODE_ENV=production
      - SERVICE_NAME=books-service
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - MONGO_BOOKS_URL=mongodb://mongo:27017/mcmasterful-books
    restart: unless-stopped

  order-service:
    build:
      context: .
      dockerfile: services/order-service/Dockerfile
    expose:
      - "3002"
    depends_on:
      - mongo-orders
      - rabbitmq
    environment:
      - NODE_ENV=production
      - SERVICE_NAME=order-service
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - MONGO_ORDERS_URL=mongodb://mongo-orders:27017/mcmasterful-orders
    restart: unless-stopped

  warehouse-service:
    build:
      context: .
      dockerfile: services/warehouse-service/Dockerfile
    expose:
      - "3003"
    depends_on:
      - mongo-warehouse
      - rabbitmq
    environment:
      - NODE_ENV=production
      - SERVICE_NAME=warehouse-service
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
      - MONGO_WAREHOUSE_URL=mongodb://mongo-warehouse:27017/mcmasterful-warehouse
    restart: unless-stopped

  # API Documentation
  docs:
    build:
      context: .
      dockerfile: docs/Dockerfile
    expose:
      - "3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Databases
  mongo:
    image: mongo:latest
    expose:
      - "27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=mcmasterful-books
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo-warehouse:
    image: mongo:latest
    expose:
      - "27017"
    volumes:
      - mongo-warehouse-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=mcmasterful-warehouse
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo-orders:
    image: mongo:latest
    expose:
      - "27017"
    volumes:
      - mongo-orders-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=mcmasterful-orders
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    expose:
      - "5672"
      - "15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongo-data:
  mongo-warehouse-data:
  mongo-orders-data:
  rabbitmq-data:
