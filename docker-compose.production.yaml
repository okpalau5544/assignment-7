version: '3.8'

services:
  # Database services (same as before)
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: bookstore
      POSTGRES_USER: bookstore_user
      POSTGRES_PASSWORD: bookstore_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookstore_user -d bookstore"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management
    environment:
      RABBITMQ_DEFAULT_USER: bookstore_user
      RABBITMQ_DEFAULT_PASS: bookstore_password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Application services using published images
  main-api:
    image: ghcr.io/okpalau5544/assignment-7/main-api:latest
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://bookstore_user:bookstore_password@postgres:5432/bookstore
      RABBITMQ_URL: amqp://bookstore_user:bookstore_password@rabbitmq:5672
      PORT: 3000
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  books-service:
    image: ghcr.io/okpalau5544/assignment-7/books-service:latest
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://bookstore_user:bookstore_password@postgres:5432/bookstore
      RABBITMQ_URL: amqp://bookstore_user:bookstore_password@rabbitmq:5672
      PORT: 3001
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    image: ghcr.io/okpalau5544/assignment-7/order-service:latest
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://bookstore_user:bookstore_password@postgres:5432/bookstore
      RABBITMQ_URL: amqp://bookstore_user:bookstore_password@rabbitmq:5672
      PORT: 3002
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  warehouse-service:
    image: ghcr.io/okpalau5544/assignment-7/warehouse-service:latest
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://bookstore_user:bookstore_password@postgres:5432/bookstore
      RABBITMQ_URL: amqp://bookstore_user:bookstore_password@rabbitmq:5672
      PORT: 3003
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  docs:
    image: ghcr.io/okpalau5544/assignment-7/docs:latest
    environment:
      NODE_ENV: production
      PORT: 3004
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mcmasterful-books:
    image: ghcr.io/okpalau5544/assignment-7/mcmasterful-books:latest
    environment:
      NODE_ENV: production
      PORT: 3005
      API_BASE_URL: http://nginx:80
    depends_on:
      - main-api
      - books-service
      - order-service
      - warehouse-service
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.dockerfiles.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - main-api
      - books-service
      - order-service
      - warehouse-service
      - docs
      - mcmasterful-books
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  bookstore_network:
    driver: bridge
