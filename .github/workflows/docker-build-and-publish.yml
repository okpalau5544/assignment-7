name: Build and Publish Docker Images

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service:
          - name: main-api
            dockerfile: ./Dockerfile
            context: .
          - name: books-service
            dockerfile: ./services/books-service/Dockerfile
            context: .
          - name: order-service
            dockerfile: ./services/order-service/Dockerfile
            context: .
          - name: warehouse-service
            dockerfile: ./services/warehouse-service/Dockerfile
            context: .
          - name: mcmasterful-books
            dockerfile: ./mcmasterful-books/Dockerfile
            context: .
          - name: docs
            dockerfile: ./docs/Dockerfile
            context: .

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Test docker-compose setup
      run: |
        # Update docker-compose.dockerfiles.yaml to use the built images
        sed -i "s|build: .|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/main-api:${{ github.sha }}|g" docker-compose.dockerfiles.yaml
        sed -i "s|build: ./services/books-service|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/books-service:${{ github.sha }}|g" docker-compose.dockerfiles.yaml
        sed -i "s|build: ./services/order-service|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/order-service:${{ github.sha }}|g" docker-compose.dockerfiles.yaml
        sed -i "s|build: ./services/warehouse-service|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/warehouse-service:${{ github.sha }}|g" docker-compose.dockerfiles.yaml
        sed -i "s|build: ./mcmasterful-books|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/mcmasterful-books:${{ github.sha }}|g" docker-compose.dockerfiles.yaml
        sed -i "s|build: ./docs|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/docs:${{ github.sha }}|g" docker-compose.dockerfiles.yaml
        
        # Start services
        docker-compose -f docker-compose.dockerfiles.yaml up -d
        
        # Wait for services to be ready
        sleep 30
        
        # Test endpoints
        curl -f http://localhost/health || exit 1
        curl -f http://localhost/docs/ || exit 1
        
        # Clean up
        docker-compose -f docker-compose.dockerfiles.yaml down
