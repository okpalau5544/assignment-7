services:
  nginx:
    depends_on:
      books:
        condition: service_started
      orders:
        condition: service_started
      warehouse:
        condition: service_started
      front-end:
        condition: service_started
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 8080:80
    command: sh -c "sleep 60 && nginx -g 'daemon off;'"

  front-end:
    image: ghcr.io/mcmastercce/bvd-103-mcmasterful-books/mcmasterful-books-docker:main
    
    volumes:
      - ./adapter:/source/adapter
      
  books:
    depends_on:
      - mongo-books
      # - rabbitmq
    image: node:22
    ports:
      - "3000:3000"
    environment:
      - MONGO_URL=mongodb://mongo-books:27017/books
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
    volumes:
      - ./books:/app
      - ./src:/app/src
      - ./node_modules:/app/node_modules
      - ./tsconfig.json:/app/tsconfig.json
      - ./documented_types.ts:/documented_types.ts
    command: npx -y tsx ./index.ts
    working_dir: /app

  orders:
    depends_on:
      - mongo-order
      - rabbitmq
    image: node:22
    ports:
      - "4000:4000"
    environment:
      - MONGO_URL=mongodb://mongo-order:27017/orders
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
    volumes:
      - ./orders:/app
      - ./src:/app/src
      - ./node_modules:/app/node_modules
      - ./tsconfig.json:/app/tsconfig.json
      - ./documented_types.ts:/documented_types.ts
    command: npx -y tsx ./index.ts
    working_dir: /app

  warehouse:
    depends_on:
      - mongo-warehouse
      - rabbitmq
    image: node:22
    ports:
      - "3002:3000"
    environment:
      - MONGO_URL=mongodb://mongo-warehouse:27017/warehouse
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
    volumes:
      - ./warehouse:/app
      - ./src:/app/src
      - ./node_modules:/app/node_modules
      - ./tsconfig.json:/app/tsconfig.json
      - ./documented_types.ts:/documented_types.ts
    command: npx -y tsx ./index.ts
    working_dir: /app

  docs:
    image: node:22
    volumes:
      - ./docs:/app
      - ./node_modules:/app/node_modules
      - ./tsconfig.json:/app/tsconfig.json
      - ./build/swagger.json:/app/swagger.json
    command: npx -y tsx ./index.ts
    working_dir: /app

  mongo-books:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: mcmasterful-books
    volumes:
      - mongo-data:/data/db
      # all *.js/*.sh here run once on first boot of a fresh volume
      - ./data/mongo-init-books:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 5s
      timeout: 3s
      retries: 20
  mongo-warehouse:
    image: mongo:latest
    ports:
      - "27019:27017"
  mongo-order:
    image: mongo:latest
    ports:
      - "27018:27017"

  rabbitmq:
    image: rabbitmq:management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password

volumes:
  mongo-data: